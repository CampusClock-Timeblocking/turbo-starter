# Nixpacks build plan focused on deploying only the Fastify API service (apps/api)
# Coolify will detect this file automatically when Build Pack = "Nixpacks".
# It installs only the minimal workspaces needed (@repo/db, @repo/auth, @repo/contracts, api),
# builds them, generates the Prisma client, then starts the Fastify server.

[phases.setup]
# Pin Node & add pnpm (Coolify may already inject these; explicit for clarity)
nixPkgs = ["nodejs_20", "pnpm"]

[variables]
# Default port Fastify will listen on inside the container (override in Coolify UI)
PORT = "3001"
NODE_ENV = "production"

# --- INSTALL PHASE ---
[phases.install]
cmds = [
  "pnpm install --frozen-lockfile"
]

# --- BUILD PHASE ---
[phases.build]
cmds = [
  # Generate Prisma client first
  "pnpm -F @repo/db exec prisma generate",

  # Build DB + Auth packages (they publish dist consumed by api)
  "pnpm -F @repo/db exec pnpm run build:ts",
  "pnpm -F @repo/auth exec tsc -p tsconfig.json",

  # Build the API
  "pnpm -F api run build:ts"
]

# --- START PHASE ---
[start]
workingDirectory = "apps/api"
cmd = "node dist/app.js"

# --- OPTIONAL: Run DB migrations automatically before start ---
# Uncomment if you want migrations during startup (idempotent in CI/CD)
# [start.pre]
# cmds = ["pnpm -F @repo/db exec prisma migrate deploy"]
